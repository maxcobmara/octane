- provide(:title, 'External Issueds')
- model_class = ExternalIssued
.page-header
  %h1= t 'external_issueds.title', :default => model_class.model_name.human
%p#notice= notice
%dl.dl-horizontal
  %dt= t 'external_issueds.unit_fuel_id', :default => model_class.human_attribute_name(:depot_fuel_id) + ":"
  %dd= check_kin {@external_issued.unit_fuel.month_unit}
%dl.dl-horizontal
  %dt= t 'external_issueds.fuel_type_id', :default => model_class.human_attribute_name(:fuel_tank_id) + ":"
  %dd= check_kin {@external_issued.fuel_type.name}
%dl.dl-horizontal
  %dt= t 'external_issueds.quantity', :default => model_class.human_attribute_name(:current) + ":"
  %dd= @external_issued.quantity.to_i
%dl.dl-horizontal
  %dt= t 'external_issueds.unit_type_id', :default => model_class.human_attribute_name(:unit_type_id) + ":"
  %dd= check_kin {@aexternal_issued.unit_type.description}
%dl.dl-horizontal
  %dt= t 'external_issueds.source', :default => model_class.human_attribute_name(:current) + ":"
  %dd= @external_issued.resource.name
  
.form-actions
  .btn.btn-default= link_to content_tag(:i, "", :class => "fa fa-arrow-left ") + " " + t('.back', :default => t("helpers.links.back")), external_issueds_path
  - if can? :update, :external_issueds
    .btn.btn-default= link_to content_tag(:i, "", :class => "fa fa-edit") + " " + t('.edit', :default => t("helpers.links.edit")), |
      edit_external_issued_path(@external_issued)
  - if can? :delete, :external_issueds
    = link_to content_tag(:i, "", :class => "fa fa-trash-o icon-white") + " " + t('.destroy', :default => t("helpers.links.destroy")), |
      external_issued_path(@external_issued),                                                                                                    |
      :method => 'delete',                                                                                                           |
      :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },                   |
      :class => 'btn btn-danger'                                                                                                     |

