- provide(:title, 'Depot Fuels')
- model_class = DepotFuel
.page-header
  %h1= t 'depot_fuels.title', :default => model_class.model_name.human.pluralize
=notice

.row
  .col-md-2
    .btn-group-vertical{"aria-label" => "sidebar", :role => "group"}
      - if can? :create, :depot_fuels
        /HACK - suppose require different account type - accessible to 'Depot Data Entry' & Admin only
        - if (current_user.roles && current_user.roles[:user_roles][:administration]=="1") || Unit.is_depot.pluck(:id).include?(current_user.staff.unit_id)
          .btn.btn-default= link_to content_tag(:i, fa_icon("asterisk", text: (t 'actions.new'))), new_depot_fuel_path
      .btn.btn-default= link_to content_tag(:i, fa_icon("search", text: (t 'actions.search'))), "#", class: "toga"
      .btn.btn-default= link_to(fa_icon("print", text: (t 'actions.print')), "javascript:print()")


  .col-md-10.index_main
    .row.searchit{style: "display:none;"}
      .span9offset1
        = search_form_for @search, class: "form-inline" do |f|
          .field
            = f.label :depot_name_cont, "Depot Name Contains"
            = f.text_field :depot_name_cont, class: "input-medium search-query"
            = f.submit "Search", class: "btn btn-warning"

    %table.table.table-condensed.table-hover
      %thead
        %tr
          %th= sort_link @search, :unit_id, t('depot_fuels.unit_id')
          %th= sort_link @search, :issue_date, t('depot_fuels.issue_date')
          %th
      %tbody
        - @depot_fuels.each do |depot_fuel|
          %tr
            %td= check_kin {depot_fuel.depot.unit_details}
            %td= check_kin {l(depot_fuel.issue_date)}
            = render :partial => 'action_menu', :locals => { :depot_fuel => depot_fuel }
