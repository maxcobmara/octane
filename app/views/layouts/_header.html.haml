%header.navbar.navbar-fixed-top.navbar-inverse
  .container-fluid
    / Brand and toggle get grouped for better mobile display
    %ul.nav.navbar-nav
      %li.dropdown
        %a.dropdown-toggle{"aria-expanded" => "false", "data-toggle" => "dropdown", :href => "#", :role => "button"}
          %span= fa_icon "bars"
        %ul.dropdown-menu{:role => "menu"}
          %li= link_to "TxPort", "http://#{request.host}:3101"
          %li= link_to "Uniformity", "http://#{request.host}:3102"
    .navbar-header
      %button.navbar-toggle.collapsed{"data-target" => "#bs-example-navbar-collapse-1", "data-toggle" => "collapse", :type => "button"}
        %span.sr-only Toggle navigation
        %span.icon-bar
        %span.icon-bar
        %span.icon-bar
      %a.navbar-brand{:href => "#"} Octane
    / Collect the nav links, forms, and other content for toggling
    #bs-example-navbar-collapse-1.collapse.navbar-collapse
      %ul.nav.navbar-nav
        - if user_signed_in? && !current_user.roles.blank?
          - if can? :read, :unit_fuels
            %li.dropdown
              %a.dropdown-toggle{"aria-expanded" => "false", "data-toggle" => "dropdown", :href => "#", :role => "button"}
                Do
                %span.caret
              %ul.dropdown-menu{:role => "menu"}
                - if can? :create, :fuel_transactions
                  /HACK - suppose require different account type - accessible to 'Depot Data Entry' & Admin only
                  - if (current_user.roles && current_user.roles[:user_roles][:administration]=="1") || Unit.is_depot.pluck(:id).include?(current_user.staff.unit_id)
                    %li= link_to "Add Fuel", new_fuel_transaction_path(transaction_type: 'Resupply')
                    %li= link_to "Use Fuel", new_fuel_transaction_path(transaction_type: 'Usage')
                    %li.divider
                - if can? :read, :fuel_transactions
                  %li= link_to "Fuel Transactions", fuel_transactions_path
                  %li.divider
                
                /HACK - suppose require different account type - accessible to 'Depot Data Entry' & Admin only
                - if (current_user.roles && current_user.roles[:user_roles][:administration]=="1") || Unit.is_depot.pluck(:id).include?(current_user.staff.unit_id)
                  - if can? :import_excel, :depot_fuels
                    %li= link_to content_tag(:li, fa_icon("file-excel-o", text: (t 'actions.import_excel'))), import_excel_depot_fuel_path
                    %li.divider
                  - if can? :read, :depot_fuels
                    %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'menu.depot_fuels'), depot_fuels_path
                  - if can? :read, :fuel_supplieds
                    %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'fuel_supplieds.title3'), fuel_supplieds_path
                  - if can? :read, :fuel_issueds
                    %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'fuel_issueds.title3'), fuel_issueds_path
                  %li.divider

                - if can? :read, :unit_fuels
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'menu.unit_fuels'), unit_fuels_path
                - if can? :read, :add_fuels
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'add_fuels.title2'), add_fuels_path
                - if can? :read, :external_issueds
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'external_issueds.title'), external_issueds_path
                - if can? :read, :external_supplieds
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'external_supplieds.title'), external_supplieds_path
                - if can? :read, :inden_usages
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'inden_usages.title'), inden_usages_path
                  %li.divider
                - if can? :read, :fuel_budgets
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'menu.fuel_budgets'), fuel_budgets_path
                - if can? :read, :fuel_limits
                  /HACK - suppose require different account type - accessible to 'Depot Data Entry' & Admin only
                  - if (current_user.roles && current_user.roles[:user_roles][:administration]=="1") || Unit.is_depot.pluck(:id).include?(current_user.staff.unit_id)
                    %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'menu.fuel_limits'), fuel_limits_path
          - if can? :read, :units
            %li.dropdown
              %a.dropdown-toggle{"aria-expanded" => "false", "data-toggle" => "dropdown", :href => "#", :role => "button"}
                Manage
                %span.caret
              %ul.dropdown-menu{:role => "menu"}
                - if can? :read, :units
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'units.list3'), units_path
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'menu.depot_listing'), units_path(:id=>1)
                - if can? :read, :vessels
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'menu.vessel_listing'), vessels_path
                - if can? :read, :inden_cards
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'menu.inden_card_listing'), inden_cards_path
                  %li.divider
                - if can? :read, :fuel_types
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'fuel_types.title'), fuel_types_path
                - if can? :read, :unit_types
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'unit_types.title'), unit_types_path
                - if can? :read, :vessels
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'menu.vessel_type'), vessel_types_path
                - if can? :read, :vessel_categories
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'menu.vessel_category'), vessel_categories_path
                  %li.divider
                - if can? :read, :fuel_tanks
                  %li= link_to content_tag(:i, "", :class => "icon-numb") + (t 'menu.fuel_tank_listing'), fuel_tanks_path

        %li.dropdown
          %a.dropdown-toggle{"aria-expanded" => "false", "data-toggle" => "dropdown", :href => "#", :role => "button"}
            Reports
            %span.caret
          %ul.dropdown-menu{:role => "menu"}
            - if can? :tank_capacity_chart, :fuel_tanks
              %li= link_to (t 'menu.tank_capacity_chart_report'),   tank_capacity_chart_fuel_tanks_path
            - if can? :tank_capacity_list, :fuel_tanks
              %li= link_to (t 'menu.tank_capacity_list_report'),   tank_capacity_list_fuel_tanks_path
            - if can? :read, :fuel_balances
              %li= link_to (t 'menu.fuel_balances'), fuel_balances_path
            - if can? :read, :depot_fuels
              %li= link_to (t 'report.depot_fuel_usage'), depot_monthly_usage_depot_fuels_path
            %li.divider
            - if can? :fuel_type_usage_category, :unit_fuels
              %li= link_to (t 'menu.fuel_usage_by_vehicle_vessel'), fuel_type_usage_category_unit_fuels_path
            
            //%li= link_to (t 'menu.fuel_usage_by_vehicle_vessel'), vehicle_vessel_usage_fuel_transactions_path - this report use FUEL Transactions as source
            //%li= link_to (t 'menu.fuel_type_per_quarter'),  daily_usage_unit_fuels_path - same as 'unit fuel list usage' (Unit Fuel Usage Report), except this 1 not complete & has no date search
            - if can? :unit_fuel_usage, :unit_fuels
              %li= link_to (t 'menu.fuel_usage_graph_report'),      unit_fuel_usage_unit_fuels_path
            - if can? :unit_fuel_list_usage, :unit_fuels
              %li= link_to (t 'menu.fuel_usage_list_report'),      unit_fuel_list_usage_unit_fuels_path
            - if can? :annual_usage_report, :unit_fuels
              %li= link_to (t 'menu.annual_usage_report'),    annual_usage_report_unit_fuels_path
            %li.divider
            - if can? :annual_budget, :fuel_budgets
              %li= link_to (t 'menu.annual_budget'), annual_budget_fuel_budgets_path
            - if can? :budget_vs_usage, :fuel_budgets
              %li= link_to (t 'menu.budget_usage_chart_report'),   budget_vs_usage_fuel_budgets_path
            - if can? :budget_vs_usage_list, :fuel_budgets
              %li= link_to ( t 'menu.budget_usage_chart_list'),   budget_vs_usage_list_fuel_budgets_path
            
          - if can? :read, :users
            %li.dropdown
              %a.dropdown-toggle{"aria-expanded" => "false", "data-toggle" => "dropdown", :href => "#", :role => "button"}
                = (t 'menu.admin')
                %span.caret
              %ul.dropdown-menu{:role => "menu"}
                %li= link_to (t 'menu.users'),   users_path
                %li= link_to (t 'menu.authorisation'),   '/authorization_rules'
                
        //%form.navbar-form.navbar-right{:role => "search"}
        //  .form-group
        //    %input.form-control{:placeholder => "Search", :type => "text"}
        //  %button.btn.btn-default{:type => "submit"} Submit
      %ul.nav.navbar-nav.navbar-right
        - if user_signed_in?
          %li= link_to current_user.email, user_path(current_user)
          %li= link_to content_tag(:i,nil, class: 'fa fa-sign-out'), destroy_user_session_path, method: :delete
        - else
          %li= link_to "Login", "#", "data-toggle" => "modal",  "data-target" => "#loginModal"
    / /.navbar-collapse
  / /.container-fluid
#loginModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "loginModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-dialog.modal-sm
    .modal-content
      = form_for(resource, :as => resource_name, :url => session_path(resource_name), :role => 'form') do |f|
        .modal-header
          %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
            %span{"aria-hidden" => "true"} &times;
          %h4#myModalLabel.modal-title Login
        .modal-body
          .form-group
            //= f.label 'Email address', class: 'control-label'
            = f.text_field :email, class: 'form-control', placeholder: (t 'home.email')

          .form-group
            //= f.label 'Password', class: 'control-label'
            = f.password_field :password, class: 'form-control', :placeholder => (t 'home.password')

          .modal-footer
            %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Close
            = f.submit (t 'home.signin'), :type => "submit", class: 'btn btn-primary'
